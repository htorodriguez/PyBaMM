sudo: false

dist: xenial

language: python

addons:
  apt:
    sources:
    - deadsnakes
    packages:
    - gfortran
    - gcc
    - libopenblas-dev
    - liblapack-dev
    - graphviz

matrix:
    include:
        # Unit and example testing on all supported Python versions on Ubuntu
        - python: "3.6"
          addons:
            apt:
              sources:
                - deadsnakes
              packages:
                - gfortran
                - gcc
                - libopenblas-dev
                - liblapack-dev
                - graphviz
                - python3.6-dev
          env:
            - PYBAMM_UNIT=true
            - PYBAMM_EXAMPLES=true
            - PYBAMM_SCIKITS_ODES=true
        - python: "3.7"
          addons:
            apt:
              sources:
                - deadsnakes
              packages:
                - gfortran
                - gcc
                - libopenblas-dev
                - liblapack-dev
                - graphviz
                - python3.7-dev
          env:
            - PYBAMM_UNIT=true
            - PYBAMM_EXAMPLES=true
            - PYBAMM_SCIKITS_ODES=true
          if: type != cron
        # Unit testing on Python3.7 on OS/X and Ubuntu
        - os: osx
          language: generic
          env:
            - PYTHON=3.7.4
            - PYBAMM_UNIT=true
          if: type != cron
        - python: "3.7"
          addons:
            apt:
              sources:
                - deadsnakes
              packages:
                - gfortran
                - gcc
                - libopenblas-dev
                - liblapack-dev
                - graphviz
                - python3.7-dev
          env:
            - PYBAMM_UNIT=true
            - PYBAMM_SCIKITS_ODES=true
        # Unit testing on Python3.7 on Ubuntu without scikit odes
        - python: "3.7"
          addons:
            apt:
              sources:
                - deadsnakes
              packages:
                - gfortran
                - gcc
                - libopenblas-dev
                - liblapack-dev
                - graphviz
                - python3.7-dev
          env:
            - PYBAMM_UNIT=true
          if: type != cron
        # Cover, docs and style checking, latest Python version only
        - python: "3.7"
          addons:
            apt:
              sources:
                - deadsnakes
              packages:
                - gfortran
                - gcc
                - libopenblas-dev
                - liblapack-dev
                - graphviz
                - python3.7-dev
          env:
            - PYBAMM_COVER=true
            - PYBAMM_SCIKITS_ODES=true
          if: type != cron
        - python: "3.7"
          addons:
            apt:
              sources:
                - deadsnakes
              packages:
                - gfortran
                - gcc
                - libopenblas-dev
                - liblapack-dev
                - graphviz
                - python3.7-dev
          env:
            - PYBAMM_DOCS=true
          if: type != cron
        - python: "3.7"
          addons:
            apt:
              sources:
                - deadsnakes
              packages:
                - gfortran
                - gcc
                - libopenblas-dev
                - liblapack-dev
                - graphviz
                - python3.7-dev
          env:
            - PYBAMM_STYLE=true
          if: type != cron
          # Cron jobs
        - python: "3.7"
          addons:
            apt:
              sources:
                - deadsnakes
              packages:
                - gfortran
                - gcc
                - libopenblas-dev
                - liblapack-dev
                - graphviz
                - python3.7-dev
          env:
            - PYBAMM_UNIT=true
            - PYBAMM_EXAMPLES=true
            - PYBAMM_SCIKITS_ODES=true
          if: type == cron

# Install graphviz for macs
before_install: |
  # below is reproduced from https://pythonhosted.org/CodeChat/.travis.yml.html
  if [[ $TRAVIS_OS_NAME == "osx" ]]; then
    brew update;
    # Per the `pyenv homebrew recommendations <https://github.com/yyuu/pyenv/wiki#suggested-build-environment>`_.
    brew install graphviz openssl readline;
    # See https://docs.travis-ci.com/user/osx-ci-environment/#A-note-on-upgrading-packages.
    brew outdated pyenv || brew upgrade pyenv
    # virtualenv doesn't work without pyenv knowledge. venv in Python 3.3
    # doesn't provide Pip by default. So, use `pyenv-virtualenv <https://github.com/yyuu/pyenv-virtualenv/blob/master/README.md>`_.
    brew install pyenv-virtualenv
    pyenv install $PYTHON;
    # I would expect something like ``pyenv init; pyenv local $PYTHON`` or
    # ``pyenv shell $PYTHON`` would work, but ``pyenv init`` doesn't seem to
    # modify the Bash environment. ??? So, I hand-set the variables instead.
    export PYENV_VERSION=$PYTHON;
    export PATH="/Users/travis/.pyenv/shims:${PATH}";
    pyenv virtualenv venv;
    source venv/bin/activate;
    # A manual check that the correct version of Python is running.
    python --version;
  fi

# Install dependencies
# Note: Use pip (not apt-get) for Python dependencies
# Note: Only install normal dependencies for unit tests; these should be tested
#       without the packages from -dev and -doc!
install:
  - pip install --upgrade pip
  - pip install .
  - if [[ $PYBAMM_DOCS == true ]]; then pip install -e .[docs]; fi;
  - if [[ $PYBAMM_STYLE == true || $PYBAMM_EXAMPLES ]]; then pip install -e .[dev]; fi;
  - if [[ $PYBAMM_COVER == true ]]; then pip install coverage codecov; fi;
  - if [[ $PYBAMM_SCIKITS_ODES == true ]]; then source scripts/install_scikits_odes.sh; fi;

before_script:
- python --version

# Note that default timeout is 10 minutes
# This can be changed with travis_wait, but that leads to
# issues with debug output:
# https://github.com/travis-ci/travis-ci/issues/5716
script:
  - if [[ $PYBAMM_UNIT == true ]]; then python run-tests.py --unit --folder all; fi;
  - if [[ $PYBAMM_DOCS == true ]]; then python run-tests.py --doctest; fi;
  - if [[ $PYBAMM_STYLE == true ]]; then python -m flake8; fi;
  - if [[ $PYBAMM_COVER == true ]]; then coverage run run-tests.py --nosub; fi;
  - if [[ $PYBAMM_EXAMPLES == true ]]; then travis_wait 120 python run-tests.py --examples; fi;

after_success:
  - if [[ $PYBAMM_COVER == true ]]; then codecov; fi;
